import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { CheckBadgeIcon } from '@heroicons/react/24/outline';
import { useForm } from 'react-hook-form';
import clsx from 'clsx';
export function Profile({ onVerify, isVerified }) {
    const { register, handleSubmit, formState: { errors, isValid }, } = useForm();
    console.log(errors, isValid);
    return (_jsx("div", Object.assign({ className: "p-16" }, { children: _jsxs("div", Object.assign({ className: "p-8 bg-white shadow mt-24" }, { children: [_jsxs("div", Object.assign({ className: "grid grid-cols-3" }, { children: [_jsx("div", {}), _jsx("div", Object.assign({ className: "relative mb-10" }, { children: _jsxs("div", Object.assign({ className: "w-48 h-48 bg-indigo-100 mx-auto rounded-full shadow-2xl absolute inset-x-0 top-0 -mt-24 flex items-center justify-center text-indigo-500" }, { children: [_jsx("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", className: "h-24 w-24", viewBox: "0 0 20 20", fill: "currentColor" }, { children: _jsx("path", { "fill-rule": "evenodd", d: "M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z", "clip-rule": "evenodd" }) })), isVerified && _jsx(CheckBadgeIcon, { className: "h-16 w-16 absolute bottom-2 -right-2" })] })) })), _jsx("div", Object.assign({ className: "space-x-8 flex justify-between mt-32 md:mt-0 md:justify-center" }, { children: _jsx("button", Object.assign({ className: "text-white py-2 px-4 uppercase rounded bg-gray-800 hover:bg-gray-900 shadow hover:shadow-lg font-medium transition transform hover:-translate-y-0.5" }, { children: "Mint POM" })) }))] })), _jsxs("div", Object.assign({ className: "mt-20 flex flex-col items-center pb-12" }, { children: [_jsxs("h1", Object.assign({ className: "text-4xl font-medium text-gray-700" }, { children: ["Jessica Jones, ", _jsx("span", Object.assign({ className: "font-light text-gray-500" }, { children: "27" }))] })), _jsx("p", Object.assign({ className: "mt-8 mb-2" }, { children: "Input your position and organisation" })), _jsxs("form", Object.assign({ onSubmit: handleSubmit(data => console.log(data)) }, { children: [_jsxs("div", Object.assign({ className: "flex items-center mb-8" }, { children: [_jsxs("p", Object.assign({ className: "text-gray-500 font-bold" }, { children: [_jsx("label", Object.assign({ htmlFor: "email", className: "sr-only" }, { children: "Position" })), _jsx("input", Object.assign({}, register('position', { required: true }), { className: "block w-96 rounded-md border-0 py-1.5 pl-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6", placeholder: "Senior Blockchain Developer" }))] })), _jsx("p", Object.assign({ className: "mx-2 font-bold" }, { children: "at" })), _jsxs("p", Object.assign({ className: "text-gray-500 font-bold" }, { children: [_jsx("label", Object.assign({ htmlFor: "email", className: "sr-only" }, { children: "Position" })), _jsx("input", Object.assign({}, register('organisation', { required: true }), { className: "block w-96 rounded-md border-0 py-1.5 pl-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6", placeholder: "Gyre" }))] }))] })), _jsx("div", Object.assign({ className: "flex justify-center" }, { children: _jsx("button", Object.assign({ className: clsx("text-white py-2 px-4 uppercase rounded bg-blue-400 hover:bg-blue-500 shadow hover:shadow-lg font-medium transition transform hover:-translate-y-0.5", !isValid && "opacity-50 cursor-not-allowed"), type: "submit" }, { children: "Verify with PolygonId" })) }))] }))] }))] })) })));
}
